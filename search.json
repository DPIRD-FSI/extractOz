[{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement adam.sparks@dpird.wa.gov.au. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://dpird-fsi.github.io/extractOz/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://dpird-fsi.github.io/extractOz/articles/extractOz.html","id":"load-libraries","dir":"Articles","previous_headings":"","what":"Load Libraries","title":"extractOz","text":"","code":"library(extractOz) library(tidyverse)"},{"path":"https://dpird-fsi.github.io/extractOz/articles/extractOz.html","id":"create-locations-in-wa-and-nsw","dir":"Articles","previous_headings":"","what":"Create Locations in WA and NSW","title":"extractOz","text":"","code":"# create a list of locations for use in testing locs <- list(   \"Merredin\" = c(x = 118.28, y = -31.48),   \"Corrigin\" = c(x = 117.87, y = -32.33),   \"Tamworth\" = c(x = 150.84, y = -31.07) )"},{"path":"https://dpird-fsi.github.io/extractOz/articles/extractOz.html","id":"extract-the-grdc-agroecological-zones","dir":"Articles","previous_headings":"","what":"Extract the GRDC AgroEcological Zones","title":"extractOz","text":"See ?extract_ae_zone() help use function.","code":"z <- extract_ae_zone(x = locs)"},{"path":"https://dpird-fsi.github.io/extractOz/articles/extractOz.html","id":"extract-the-soil-order","dir":"Articles","previous_headings":"","what":"Extract the Soil Order","title":"extractOz","text":"See ?extract_daas_soil_order() help use function.","code":"s <- extract_daas_soil_order(x = locs)"},{"path":"https://dpird-fsi.github.io/extractOz/articles/extractOz.html","id":"get-weather-data-for-these-locations-in-2020","dir":"Articles","previous_headings":"","what":"Get Weather Data for these Locations in 2020","title":"extractOz","text":"Using previously created list GPS points, fetch station observation weather data SILO 2020. non-working example, replace your_api_key email address . See ?extract_patched_point() help use function.","code":"three_sites  <-   extract_patched_point(     x = locs,     start_date = \"20200101\",     end_date = \"20201231\",     api_key = \"adamhsparks@gmail.com\"   )"},{"path":"https://dpird-fsi.github.io/extractOz/articles/extractOz.html","id":"join-the-weather-data-with-ae-zone-soil-order-and-site-information","dir":"Articles","previous_headings":"","what":"Join the Weather Data with AE Zone, Soil Order and Site Information","title":"extractOz","text":"Now using dplyr::left_join(), create single data.frame() location, GPS coordinates, agroecological zone weather data.","code":"left_join(z, three_sites, by = c(\"location\" = \"location\")) %>%   left_join(s)"},{"path":"https://dpird-fsi.github.io/extractOz/articles/extractOz.html","id":"creating-a-pipeline","dir":"Articles","previous_headings":"","what":"Creating a Pipeline","title":"extractOz","text":"can use {magrittr’s} pipe, %>%, string whole set commands together pipeline ingest, extract information download weather data GPS points. , import data CSV file, extract values, fetch weather data create data.frame object AE Zone, soil order, weather site information. CSV file included package can run example providing e-mail address SILO API key. Using helper function, df_to_list() pipeline converts [tibble::tibble()] [readr::read_csv()] list() object can used functions found {extractOz}. left_join() takes existing data.frame location information, AE Zone soil order x = .. y left join get_patched_point() details provided API, original data.frame x y information Sitename provided .$colname. final step save data.frame object, complete_data.","code":"x <- read_csv(system.file(   \"extdata\",   \"sample_points.csv\",   package = \"extractOz\",   mustWork = TRUE ))  # create a data.frame of the soil order and AE Zone x %>%   df_to_list() %>%   left_join(     x = extract_ae_zone(x = .),     y = extract_daas_soil_order(x = .),     by = c(\"x\", \"y\", \"location\")   ) -> soil_zone  # join the `soil_zone` with weather data from SILO left_join(   x = soil_zone,   y = extract_patched_point(     x = df_to_list(x),     start_date = \"20200101\",     end_date = \"20201231\",     api_key = \"your_api_key\"   ),   by = c(\"location\" = \"location\") ) -> complete_data"},{"path":"https://dpird-fsi.github.io/extractOz/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam H. Sparks. Author, conceptor. Rodrigo Pires. Author, maintainer. Western Australia Agriculture Authority (WAAA). Copyright holder.           Provided support Adam Sparks's time. Grains Research Development Corporation. Funder, copyright holder.           GRDC Project GRI2007-001RTX","code":""},{"path":"https://dpird-fsi.github.io/extractOz/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sparks , Pires R (2024). extractOz: Extract Australian Soil, Weather GRDC Agro-ecological Zone Information GPS Points. R package version 1.1.8, https://dpird-fsi.github.io/extractOz/, https://github.com/DPIRD-FSI/extractOz.","code":"@Manual{,   title = {extractOz: Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points},   author = {Adam H. Sparks and Rodrigo Pires},   year = {2024},   note = {R package version 1.1.8, https://dpird-fsi.github.io/extractOz/},   url = {https://github.com/DPIRD-FSI/extractOz}, }"},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"extractoz-a-unified-approach-to-extracting-data-about-australian-locations-using-gps-points-","dir":"","previous_headings":"","what":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"Extract GRDC agroecological zone, major soil order weather data GPS sampling points. Datasets GRDC agroecological zones functions automatically download modified data Digital Atlas Australian Soils included package ease use. may also use geospatial vector format file extract similar information using generic function, extract_area().","code":""},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"can install {extractOz} like . Load packages necessary execute examples follow.","code":"if (!require(\"remotes\")) {   install.packages(\"remotes\") }  remotes::install_github(\"DPIRD-FSI/extractOz\", build_vignettes = TRUE) library(extractOz) library(dplyr) ##  ## Attaching package: 'dplyr'  ## The following objects are masked from 'package:stats': ##  ##     filter, lag  ## The following objects are masked from 'package:base': ##  ##     intersect, setdiff, setequal, union"},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"create-locations-in-wa-and-nsw","dir":"","previous_headings":"","what":"Create Locations in WA and NSW","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"","code":"locs <- list(   \"Merredin\" = c(x = 118.28, y = -31.48),   \"Corrigin\" = c(x = 117.87, y = -32.33),   \"Tamworth\" = c(x = 150.84, y = -31.07) )"},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"extract-the-grdc-agroecological-zones","dir":"","previous_headings":"","what":"Extract the GRDC AgroEcological Zones","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"See ?extract_ae_zone() help use function.","code":"z <- extract_ae_zone(x = locs)"},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"extract-the-soil-order","dir":"","previous_headings":"","what":"Extract the Soil Order","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"See ?extract_soil_order() help use function.","code":"s <- extract_daas_soil_order(x = locs)"},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"get-weather-data-for-these-locations-in-2020","dir":"","previous_headings":"","what":"Get Weather Data for These Locations in 2020","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"Using previously used list GPS points, fetch weather data SILO 2020. just non-working example, replace your_api_key email address . See ?extract_patched_point() help use function.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"a-note-on-api-keys","dir":"","previous_headings":"Get Weather Data for These Locations in 2020","what":"A Note on API Keys","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"examples README assume stored API key .Renviron file. See Chapter 8 “Forgot Teach R” Bryan et al. storing details .Renviron unfamiliar.","code":"three_sites <-   extract_patched_point(     x = locs,     start_date = \"20200101\",     end_date = \"20201231\",     api_key = Sys.getenv(\"SILO_API_KEY\")   ) ## You have requested station observation data but some rows in this ## dataset have data codes for interpolated data. ## Check the 'data_source' columns and `get_patched_point()` or ## `get_data_drill()` documentation for further details on codes and ## references. ##  ## You have requested station observation data but some rows in this ## dataset have data codes for interpolated data. ## Check the 'data_source' columns and `get_patched_point()` or ## `get_data_drill()` documentation for further details on codes and ## references."},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"join-the-weather-data-with-ae-zone-soil-order-and-site-information","dir":"","previous_headings":"","what":"Join the Weather Data with AE Zone, Soil Order and Site Information","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"Now using dplyr::left_join(), create single data.frame() location, GPS coordinates, agroecological zone weather data.","code":"left_join(z, three_sites, by = c(   \"location\" = \"location\",   \"x\" = \"x\",   \"y\" = \"y\" )) %>%   left_join(s) ## Joining with `by = join_by(location, x, y)`  ## Key: <location> ##       location      x      y       ae_zone station_code         station_name ##         <char>  <num>  <num>        <char>       <char>               <char> ##    1: Corrigin 117.87 -32.33    WA Central       010536             Corrigin ##    2: Corrigin 117.87 -32.33    WA Central       010536             Corrigin ##    3: Corrigin 117.87 -32.33    WA Central       010536             Corrigin ##    4: Corrigin 117.87 -32.33    WA Central       010536             Corrigin ##    5: Corrigin 117.87 -32.33    WA Central       010536             Corrigin ##   ---                                                                        ## 1094: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325 Tamworth Airport AWS ## 1095: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325 Tamworth Airport AWS ## 1096: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325 Tamworth Airport AWS ## 1097: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325 Tamworth Airport AWS ## 1098: Tamworth 150.84 -31.07 NSW NE/Qld SE       055325 Tamworth Airport AWS ##        year   day       date air_tmax air_tmax_source air_tmin air_tmin_source ##       <num> <int>     <Date>    <num>           <int>    <num>           <int> ##    1:  2020     1 2020-01-01     37.4              25     15.3              25 ##    2:  2020     2 2020-01-02     23.0               0     16.0              25 ##    3:  2020     3 2020-01-03     26.0               0     12.5               0 ##    4:  2020     4 2020-01-04     34.0               0      8.0               0 ##    5:  2020     5 2020-01-05     38.0               0     12.0               0 ##   ---                                                                          ## 1094:  2020    27 2020-12-27     29.8               0     15.0               0 ## 1095:  2020    28 2020-12-28     26.8               0     18.3               0 ## 1096:  2020    29 2020-12-29     28.9               0     17.5               0 ## 1097:  2020    30 2020-12-30     29.4               0     14.9               0 ## 1098:  2020    31 2020-12-31     30.0               0     16.1               0 ##        elev_m et_morton_actual et_morton_actual_source et_morton_potential ##        <char>            <num>                   <int>               <num> ##    1: 295.0 m              3.3                      26                11.0 ##    2: 295.0 m              6.4                      26                 6.4 ##    3: 295.0 m              3.4                      26                 7.3 ##    4: 295.0 m              4.6                      26                 8.4 ##    5: 295.0 m              7.4                      26                 8.8 ##   ---                                                                      ## 1094: 394.9 m              5.5                      26                 6.9 ## 1095: 394.9 m              4.1                      26                 4.9 ## 1096: 394.9 m              2.6                      26                 5.3 ## 1097: 394.9 m              6.6                      26                 6.6 ## 1098: 394.9 m              6.2                      26                 8.1 ##       et_morton_potential_source et_morton_wet et_morton_wet_source ##                            <int>         <num>                <int> ##    1:                         26           7.2                   26 ##    2:                         26           6.4                   26 ##    3:                         26           5.4                   26 ##    4:                         26           6.5                   26 ##    5:                         26           8.1                   26 ##   ---                                                               ## 1094:                         26           6.2                   26 ## 1095:                         26           4.5                   26 ## 1096:                         26           3.9                   26 ## 1097:                         26           6.6                   26 ## 1098:                         26           7.1                   26 ##       et_short_crop et_short_crop_source et_tall_crop et_tall_crop_source ##               <num>                <int>        <num>               <int> ##    1:           8.0                   26         10.4                  26 ##    2:           4.4                   26          4.7                  26 ##    3:           5.4                   26          6.7                  26 ##    4:           7.0                   26          8.9                  26 ##    5:           7.3                   26          9.0                  26 ##   ---                                                                     ## 1094:           5.3                   26          6.3                  26 ## 1095:           3.5                   26          4.2                  26 ## 1096:           3.8                   26          4.8                  26 ## 1097:           5.2                   26          5.9                  26 ## 1098:           6.0                   26          7.1                  26 ##       evap_comb evap_comb_source evap_morton_lake evap_morton_lake_source ##           <num>            <int>            <num>                   <int> ##    1:       9.5               25              8.1                      26 ##    2:      10.4                0              6.6                      26 ##    3:       8.0                0              6.2                      26 ##    4:       8.0                0              7.5                      26 ##    5:      10.6                0              8.4                      26 ##   ---                                                                     ## 1094:       5.5               25              6.3                      26 ## 1095:       3.6               25              4.5                      26 ## 1096:       2.6               25              4.0                      26 ## 1097:       4.3               25              6.8                      26 ## 1098:       5.0               25              7.3                      26 ##       evap_pan evap_pan_source evap_syn evap_syn_source  extracted ##          <num>           <int>    <num>           <int>     <Date> ##    1:      9.5              25     11.1              26 2024-07-15 ##    2:     10.4               0      7.2              26 2024-07-15 ##    3:      8.0               0      8.3              26 2024-07-15 ##    4:      8.0               0     10.1              26 2024-07-15 ##    5:     10.6               0     10.4              26 2024-07-15 ##   ---                                                              ## 1094:      5.5              25      6.7              26 2024-07-15 ## 1095:      3.6              25      4.5              26 2024-07-15 ## 1096:      2.6              25      5.1              26 2024-07-15 ## 1097:      4.3              25      6.5              26 2024-07-15 ## 1098:      5.0              25      7.5              26 2024-07-15 ##       station_latitude station_longitude   mslp mslp_source radiation ##                  <num>             <num>  <num>       <int>     <num> ##    1:         -32.3292          117.8733 1012.7          25      31.0 ##    2:         -32.3292          117.8733 1010.8           0      27.1 ##    3:         -32.3292          117.8733 1017.2           0      26.8 ##    4:         -32.3292          117.8733 1020.9           0      30.9 ##    5:         -32.3292          117.8733 1015.9           0      30.8 ##   ---                                                                 ## 1094:         -31.0742          150.8362 1015.7           0      24.9 ## 1095:         -31.0742          150.8362 1012.7           0      15.7 ## 1096:         -31.0742          150.8362 1011.4           0      14.0 ## 1097:         -31.0742          150.8362 1014.2           0      26.4 ## 1098:         -31.0742          150.8362 1015.8           0      28.7 ##       radiation_source rainfall rainfall_source rh_tmax rh_tmax_source rh_tmin ##                  <int>    <num>           <int>   <num>          <int>   <num> ##    1:               42      0.0               0    22.6             26    83.5 ##    2:               42      0.0               0    71.2             26   100.0 ##    3:               42      0.0               0    37.5             26    87.0 ##    4:               42      0.0               0    26.3             26   100.0 ##    5:               42      0.0               0    33.4             26   100.0 ##   ---                                                                          ## 1094:               42      2.0               0    46.5             26   100.0 ## 1095:               42     10.2               0    61.9             26   100.0 ## 1096:               42      1.0               0    50.0             26    99.6 ## 1097:               42     18.8               0    52.7             26   100.0 ## 1098:               42      0.0               0    44.5             26   100.0 ##       rh_tmin_source    vp vp_deficit vp_deficit_source vp_source ##                <int> <num>      <num>             <int>     <int> ##    1:             26  14.5       32.7                26        25 ##    2:             26  20.0        5.2                26         0 ##    3:             26  12.6       14.9                26         0 ##    4:             26  14.0       22.7                26         0 ##    5:             26  22.1       24.1                26         0 ##   ---                                                             ## 1094:             26  19.5       14.3                26         0 ## 1095:             26  21.8        9.3                26         0 ## 1096:             26  19.9       13.8                26         0 ## 1097:             26  21.6       11.6                26         0 ## 1098:             26  18.9       15.8                26         0 ##       daas_soil_order ##                <char> ##    1:         Sodosol ##    2:         Sodosol ##    3:         Sodosol ##    4:         Sodosol ##    5:         Sodosol ##   ---                 ## 1094:        Dermosol ## 1095:        Dermosol ## 1096:        Dermosol ## 1097:        Dermosol ## 1098:        Dermosol"},{"path":"https://dpird-fsi.github.io/extractOz/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points","text":"Please note {extractOz} project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/aez.html","id":null,"dir":"Reference","previous_headings":"","what":"GRDC Australian Grains Agroecological Zones — aez","title":"GRDC Australian Grains Agroecological Zones — aez","text":"sf::sf object displaying GRDC Australian Grains Agroecological Zones","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/aez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRDC Australian Grains Agroecological Zones — aez","text":"","code":"aez"},{"path":"https://dpird-fsi.github.io/extractOz/reference/aez.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GRDC Australian Grains Agroecological Zones — aez","text":"sf::sf() polygon object","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/aez.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GRDC Australian Grains Agroecological Zones — aez","text":"Australian Grains Research Development Corporation, GRDC, https://grdc.com.au/ CC0 licence.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/aez.html","id":"coordinate-reference-system","dir":"Reference","previous_headings":"","what":"Coordinate Reference System","title":"GRDC Australian Grains Agroecological Zones — aez","text":"Geodetic CRS:  WGS 84","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/df_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Data Frame Object to a List Suitable For Use — df_to_list","title":"Convert a Data Frame Object to a List Suitable For Use — df_to_list","text":"helper function convert data.frames objects inheriting data.frame, e.g. tibble::tibble() data.table::data.table() list suitable use extractOz functions.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/df_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Data Frame Object to a List Suitable For Use — df_to_list","text":"","code":"df_to_list(x, names = 1, lonlat = 2:3)"},{"path":"https://dpird-fsi.github.io/extractOz/reference/df_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Data Frame Object to a List Suitable For Use — df_to_list","text":"x data.frame. three column object first column location name, second longitude, named \"x\", third, latitude, named \"y\", decimal degrees numeric format. names Integer. column location names located. Defaults 1. lonlat Vector. set integer values indicating column index longitude latitude values contained. Defaults 2:3.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/df_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Data Frame Object to a List Suitable For Use — df_to_list","text":"list object suitable use extract functions extractOz.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/df_to_list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert a Data Frame Object to a List Suitable For Use — df_to_list","text":"Adam H. Sparks, adamhsparks@gmail.com","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/df_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Data Frame Object to a List Suitable For Use — df_to_list","text":"","code":"library(readr)  read_csv(system.file(   \"extdata\",   \"sample_points.csv\",   package = \"extractOz\",   mustWork = TRUE )) |>   df_to_list(names = 1, lonlat = 2:3) #> Rows: 3 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (1): site #> dbl (2): x, y #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> $Merredin #>      x      y  #> 118.28 -31.48  #>  #> $Corrigin #>      x      y  #> 117.87 -32.33  #>  #> $Tamworth #>      x      y  #> 150.84 -31.07  #>"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extractOz-package.html","id":null,"dir":"Reference","previous_headings":"","what":"extractOz: Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points — extractOz-package","title":"extractOz: Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points — extractOz-package","text":"Extracts point data given GPS coordinate includes major soil order, weather GRDC agro-ecological zone information point.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/reference/extractOz-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extractOz: Extract Australian Soil, Weather and GRDC Agro-ecological Zone Information from GPS Points — extractOz-package","text":"Maintainer: Rodrigo Pires rodrigo.pires@dpird.wa.gov.au (ORCID) Authors: Adam H. Sparks adam.sparks@dpird.wa.gov.au (ORCID) [conceptor] contributors: Western Australia Agriculture Authority (WAAA) (Provided support Adam Sparks's time.) [copyright holder] Grains Research Development Corporation (GRDC Project GRI2007-001RTX) [funder, copyright holder]","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_ae_zone.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract GRDC Agroecological Zones Using Australian GPS Coordinates — extract_ae_zone","title":"Extract GRDC Agroecological Zones Using Australian GPS Coordinates — extract_ae_zone","text":"Extract GRDC Agroecological Zones Using Australian GPS Coordinates","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_ae_zone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract GRDC Agroecological Zones Using Australian GPS Coordinates — extract_ae_zone","text":"","code":"extract_ae_zone(x)"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_ae_zone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract GRDC Agroecological Zones Using Australian GPS Coordinates — extract_ae_zone","text":"x List. object names containing vector pairings longitude latitude values expressed decimal degree values order, individual vectors' items named \"x\" (longitude) \"y\" (latitude), respectively.  list item names descriptive individual vectors included \"location\" column output.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_ae_zone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract GRDC Agroecological Zones Using Australian GPS Coordinates — extract_ae_zone","text":"data.table::data.table provided GPS coordinates respective GRDC agroecological zone.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_ae_zone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract GRDC Agroecological Zones Using Australian GPS Coordinates — extract_ae_zone","text":"","code":"locs <- list(   \"Merredin\" = c(x = 118.28, y = -31.48),   \"Corrigin\" = c(x = 117.87, y = -32.33),   \"Tamworth\" = c(x = 150.84, y = -31.07)   )  extract_ae_zone(x = locs) #> Key: <location> #>    location      x      y       ae_zone #>      <char>  <num>  <num>        <char> #> 1: Corrigin 117.87 -32.33    WA Central #> 2: Merredin 118.28 -31.48    WA Eastern #> 3: Tamworth 150.84 -31.07 NSW NE/Qld SE"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an Area of Interest Using Australian GPS Coordinates — extract_area","title":"Extract an Area of Interest Using Australian GPS Coordinates — extract_area","text":"generic function extract area interest user-provided GPS coordinates.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an Area of Interest Using Australian GPS Coordinates — extract_area","text":"","code":"extract_area(x, spatial, area)"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an Area of Interest Using Australian GPS Coordinates — extract_area","text":"x List. object names containing vector pairings longitude latitude values expressed decimal degree values order, individual vectors' items named \"x\" (longitude) \"y\" (latitude), respectively.  list item names descriptive individual vectors included \"location\" column output. spatial user-supplied sf::sf() object contains information derive location information . area field spatial returned.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract an Area of Interest Using Australian GPS Coordinates — extract_area","text":"data.table::data.table provided GPS coordinates respective area value spatial.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract an Area of Interest Using Australian GPS Coordinates — extract_area","text":"","code":"# load the `aez` data included in the package for use in example only. # the `extract_ae_zone()` performs this exact task, this is strictly # for demonstration purposes only  library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  aez <- read_sf(system.file( \"extdata\", \"aez.gpkg\", package = \"extractOz\", mustWork = TRUE ))  locs <- list(   \"Merredin\" = c(x = 118.28, y = -31.48),   \"Corrigin\" = c(x = 117.87, y = -32.33),   \"Tamworth\" = c(x = 150.84, y = -31.07) )  extract_area(x = locs, spatial = aez, area = \"AEZ\") #> Key: <location> #>    location      x      y           AEZ #>      <char>  <num>  <num>        <char> #> 1: Corrigin 117.87 -32.33    WA Central #> 2: Merredin 118.28 -31.48    WA Eastern #> 3: Tamworth 150.84 -31.07 NSW NE/Qld SE"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_daas_soil_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","title":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","text":"Extracts major soil order GPS points provided assuming land-based coordinates.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_daas_soil_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","text":"","code":"extract_daas_soil_order(x, cache = FALSE, aez_only = TRUE)"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_daas_soil_order.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","text":"https://data.gov.au/dataset/ds-dga-5ccb44bf-93f2-4f94-8ae2-4c3f699ea4e7/distribution/dist-dga-56ba5f25-2324-43b5-8df8-b9c69ae2ea0b/details?q=","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_daas_soil_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","text":"x List. object names containing vector pairings longitude latitude values expressed decimal degree values order, individual vectors' items named \"x\" (longitude) \"y\" (latitude), respectively.  list item names descriptive individual vectors included \"location\" column output. cache Boolean.  Store soil data locally later use?  FALSE, downloaded files removed R session closed. take advantage cached files future sessions, use cache = TRUE.  Defaults FALSE. Value optional.  future requests use cached data unless remove_cache() used remove cached file. aez_only Boolean.  use soils GRDC agroecozones?  Use aez = FALSE extract soil data anywhere Australia. Use aez = TRUE work soils GRDC agroecozones. Defaults TRUE.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_daas_soil_order.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","text":"data.table::data.table provided GPS coordinates respective Digital Atlas Australian Soils (DAAS soil order), \"Spatial Data Conversion Atlas Australian Soils Australian Soil Classification v01\".","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_daas_soil_order.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","text":"first run take additional time download extract soils data.  cache = TRUE, use much faster due locally cached geospatial soils data.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_daas_soil_order.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Soil Order From DAAS Using Australian GPS Coordinates — extract_daas_soil_order","text":"","code":"if (FALSE) { # interactive() locs <- list(   \"Merredin\" = c(x = 118.28, y = -31.48),   \"Corrigin\" = c(x = 117.87, y = -32.33),   \"Tamworth\" = c(x = 150.84, y = -31.07) )  extract_daas_soil_order(x = locs, cache = FALSE)  # extract soils data for Mt. Isa, Qld (not in the GRDC AEZ) locs <- list(\"Mt_Isa\" = c(x = 139.4930, y = -20.7264)) extract_daas_soil_order(x = locs, aez = FALSE) }"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"modified wrapper version weatherOz::get_data_drill() allows fetching many geophysical points single geophysical point. Extracts interpolated weather data SILO API gridded data, PatchedPointData, data set.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"","code":"extract_data_drill(x, start_date, end_date, values = \"all\", api_key)"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"x List. object names containing vector pairings longitude latitude values expressed decimal degree values order, individual vectors' items named \"x\" (longitude) \"y\" (latitude), respectively.  list item names descriptive individual vectors included \"location\" column output. start_date character string Date object representing beginning range query format “yyyy-mm-dd” (ISO8601).  Data returned inclusive date. end_date character string Date object representing end range query format  “yyyy-mm-dd” (ISO8601).  Data returned inclusive date.  Defaults current system date. values character string type weather data return.  See Available Values full list valid values. Defaults available values returned. api_key character string specifying valid email address use request.  query return error valid email address provided.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"data.table::data.table weather data queried weather variables alphabetical order. first eight columns always : longitude, latitude, elev_m (elevation metres), date (ISO8601 format, YYYYMMDD), year, month, day, extracted (date query made)","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"available-values","dir":"Reference","previous_headings":"","what":"Available Values","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"return following values rain (mm) Rainfall max_temp (degrees C) Maximum temperature min_temp (degrees C) Minimum temperature vp (hPa) Vapour pressure vp_deficit (hPa) Vapour pressure deficit evap_pan (mm) Class pan evaporation evap_syn (mm) Synthetic estimate1 evap_comb (mm) Combination (synthetic estimate pre-1970, class pan 1970 onwards) evap_morton_lake (mm) Morton's shallow lake evaporation radiation (Mj/m2) Solar exposure, consisting direct diffuse components rh_tmax (%) Relative humidity time maximum temperature rh_tmin (%) Relative humidity time minimum temperature et_short_crop (mm) FAO564 short crop et_tall_crop (mm) ASCE5 tall crop6 et_morton_actual (mm) Morton's areal actual evapotranspiration et_morton_potential (mm) Morton's point potential evapotranspiration et_morton_wet (mm) Morton's wet-environment areal potential evapotranspiration land mslp (hPa) Mean sea level pressure","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"value-information","dir":"Reference","previous_headings":"","what":"Value information","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"Solar radiation: total incoming downward shortwave radiation horizontal surface, derived estimates cloud oktas sunshine duration3. Relative humidity: calculated using vapour pressure measured 9am, saturation vapour pressure computed using either maximum minimum temperature6. Evaporation evapotranspiration: overview variables provided SILO available , https://data.longpaddock.qld.gov.au/static/publications/Evapotranspiration_overview.pdf.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"data-codes","dir":"Reference","previous_headings":"","what":"Data codes","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"Data codes possible (depending file format), data supplied codes indicating datum obtained. 0 Official observation supplied Bureau Meteorology 15 Deaccumulated rainfall (original observation recorded period exceeding standard 24 hour observation period) 25 Interpolated daily observations date 26 Synthetic Class pan evaporation, calculated temperatures, radiation vapour pressure 35 Interpolated daily observations using anomaly interpolation method 75 Interpolated long term averages daily observations day year","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"Rayner, D. (2005). Australian synthetic daily Class pan evaporation. Technical Report December 2005, Queensland Department Natural Resources Mines, Indooroopilly, Qld., Australia, 40 pp. Morton, F. . (1983). Operational estimates areal evapotranspiration significance science practice hydrology, Journal Hydrology, Volume 66, 1-76. Zajaczkowski, J., Wong, K., & Carter, J. (2013). Improved historical solar radiation gridded data Australia, Environmental Modelling & Software, Volume 49, 64–77. DOI: doi:10.1016/j.envsoft.2013.06.013 . Food Agriculture Organization United Nations, Irrigation drainage paper 56: Crop evapotranspiration - Guidelines computing crop water requirements, 1998. ASCE’s Standardized Reference Evapotranspiration Equation, proceedings National Irrigation Symposium, Phoenix, Arizona, 2000. details refer Jeffrey, S.J., Carter, J.O., Moodie, K.B. Beswick, .R. (2001). Using spatial interpolation construct comprehensive archive Australian climate data, Environmental Modelling Software, Volume 16/4, 309-330. DOI: doi:10.1016/S1364-8152(01)00008-1 .","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"Adam H. Sparks, adamhsparks@gmail.com","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_data_drill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Weather From SILO Data Drill Using Australian GPS Coordinates — extract_data_drill","text":"","code":"if (FALSE) { # \\dontrun{ # Source data from a list of latitude and longitude coordinates in NSW # and WA locs <- list(     \"Merredin\" = c(x = 118.28, y = -31.48),     \"Corrigin\" = c(x = 117.87, y = -32.33),     \"Tamworth\" = c(x = 150.84, y = -31.07) )  wd <- extract_data_drill(     x = locs,     start_date = \"20211001\",     end_date = \"20211201\",     values = \"all\",     api_key = \"your_api_key\" ) } # }"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"Extracts station-based weather data provided dates nearest weather station provided longitude latitude values x. Weather data single closest station(s) provided longitude latitude always returned.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"","code":"extract_patched_point(   x,   start_date,   end_date,   n_stations = 1L,   values = \"all\",   api_key = NULL )"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"x List. object names containing vector pairings longitude latitude values expressed decimal degree values order, individual vectors' items named \"x\" (longitude) \"y\" (latitude), respectively.  list item names descriptive individual vectors included \"location\" column output. start_date character string Date object representing beginning range query format “yyyy-mm-dd” (ISO8601).  Data returned inclusive date. end_date character string Date object representing end range query format  “yyyy-mm-dd” (ISO8601).  Data returned inclusive date.  Defaults current system date. n_stations integer value indicates many stations per location returned.  Defaults one (1) station nearest station returned.  Values greater 1 result next nearest stations returned 1 n. values character string type weather data return.  See Available Values full list valid values. Defaults available values returned. api_key character string specifying valid email address use request.  query return error valid email address provided.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"data.table::data.table weather data queried weather variables alphabetical order.  first eight columns always : station_code, station_name, longitude, latitude, elev_m (elevation metres), date (ISO8601 format, \"YYYYMMDD\"), year, month, day, extracted (date query made)","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"column-name-details","dir":"Reference","previous_headings":"","what":"Column Name Details","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"Column names converted default returns API snake_case formatted appropriate, names values analogous SILO DPIRD data named using name ease interoperability, e.g., using rbind() create data.table contains data APIs. SILO documentation provides following information PatchedPoint data. data continuous daily time series data either recording stations grid points across Australia: Data station locations consists observational records supplemented interpolated estimates observed data missing. Datasets available approximately 8,000 Bureau Meteorology recording stations around Australia. Data grid points consists entirely interpolated estimates. data taken SILO gridded datasets available pixel 0.05° × 0.05° grid land area Australia (including islands).","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"available-values","dir":"Reference","previous_headings":"","what":"Available Values","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"return following values rain (mm) Rainfall max_temp (degrees C) Maximum temperature min_temp (degrees C) Minimum temperature vp (hPa) Vapour pressure vp_deficit (hPa) Vapour pressure deficit evap_pan (mm) Class pan evaporation evap_syn (mm) Synthetic estimate1 evap_comb (mm) Combination (synthetic estimate pre-1970, class pan 1970 onwards) evap_morton_lake (mm) Morton's shallow lake evaporation radiation (Mj/m2) Solar exposure, consisting direct diffuse components rh_tmax (%) Relative humidity time maximum temperature rh_tmin (%) Relative humidity time minimum temperature et_short_crop (mm) FAO564 short crop et_tall_crop (mm) ASCE5 tall crop6 et_morton_actual (mm) Morton's areal actual evapotranspiration et_morton_potential (mm) Morton's point potential evapotranspiration et_morton_wet (mm) Morton's wet-environment areal potential evapotranspiration land mslp (hPa) Mean sea level pressure","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"value-information","dir":"Reference","previous_headings":"","what":"Value information","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"Solar radiation: total incoming downward shortwave radiation horizontal surface, derived estimates cloud oktas sunshine duration3. Relative humidity: calculated using vapour pressure measured 9am, saturation vapour pressure computed using either maximum minimum temperature6. Evaporation evapotranspiration: overview variables provided SILO available , https://data.longpaddock.qld.gov.au/static/publications/Evapotranspiration_overview.pdf.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"data-codes","dir":"Reference","previous_headings":"","what":"Data codes","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"data supplied codes indicating datum obtained. 0 Official observation supplied Bureau Meteorology 15 Deaccumulated rainfall (original observation recorded period exceeding standard 24 hour observation period). 25 Interpolated daily observations date. 26 Synthetic Class pan evaporation, calculated temperatures, radiation vapour pressure. 35 Interpolated daily observations using anomaly interpolation method. 75 Interpolated long term averages daily observations day year.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"Rayner, D. (2005). Australian synthetic daily Class pan evaporation. Technical Report December 2005, Queensland Department Natural Resources Mines, Indooroopilly, Qld., Australia, 40 pp. Morton, F. . (1983). Operational estimates areal evapotranspiration significance science practice hydrology, Journal Hydrology, Volume 66, 1-76. Zajaczkowski, J., Wong, K., & Carter, J. (2013). Improved historical solar radiation gridded data Australia, Environmental Modelling & Software, Volume 49, 64–77. DOI: doi:10.1016/j.envsoft.2013.06.013 . Food Agriculture Organization United Nations, Irrigation drainage paper 56: Crop evapotranspiration - Guidelines computing crop water requirements, 1998. ASCE’s Standardized Reference Evapotranspiration Equation, proceedings National Irrigation Symposium, Phoenix, Arizona, 2000. details refer Jeffrey, S.J., Carter, J.O., Moodie, K.B. Beswick, .R. (2001). Using spatial interpolation construct comprehensive archive Australian climate data, Environmental Modelling Software, Volume 16/4, 309-330. DOI: doi:10.1016/S1364-8152(01)00008-1 .","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"Adam H. Sparks, adamhsparks@gmail.com","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_patched_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Weather From the Nearest Patched Point Weather Station in the SILO Network Using Australian GPS Coordinates — extract_patched_point","text":"","code":"if (FALSE) { # \\dontrun{    # Source data from a list of latitude and longitude coordinates in NSW & WA    locs <- list(     \"Merredin\" = c(x = 118.28, y = -31.48),     \"Corrigin\" = c(x = 117.87, y = -32.33),     \"Tamworth\" = c(x = 150.84, y = -31.07)   )    # Replace \"your_api_key\" with a valid email address.    w <- extract_patched_point(     x = locs,     start_date = \"20210101\",     end_date = \"20210131\",     api_key = \"your_api_key\"   ) } # }"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"Extracts satellite modelled weather data NASA POWER API GPS points provided.  wrapper nasapower::get_power() work Australian locations.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"","code":"extract_power(   x,   start_date,   end_date,   pars,   community,   temporal_api = NULL,   site_elevation = NULL,   wind_elevation = NULL,   wind_surface = NULL,   temporal_average = NULL,   time_standard = \"LST\" )"},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"https://power.larc.nasa.gov/","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"x List. object names containing vector pairings longitude latitude values expressed decimal degree values order, individual vectors' items named \"x\" (longitude) \"y\" (latitude), respectively.  list item names descriptive individual vectors included \"location\" column output. start_date Integer. string representing start date query format 'yyyymmdd' (ISO-8601).  used temporal_api set “climatology”. See argument details . end_date Integer. string representing end date query format 'yyyymmdd' (ISO-8601).  used temporal_api set “climatology”. See argument details . pars character vector solar, meteorological climatology parameters download.  requesting single point x, y coordinates, maximum twenty (20) pars can specified one time, “daily”, “monthly” “climatology” temporal_apis.  temporal_api specified “hourly” 15 pars can specified single query.  See temporal_api . community character vector providing community name: “ag”, “re” “sb”.  See argument details . temporal_api Temporal API end-point data queried, supported values “hourly”, “daily”, “monthly” “climatology”.  See argument details . site_elevation user-supplied value elevation single point metres.  provided return corrected atmospheric pressure value adjusted elevation provided. wind_elevation user-supplied value elevation single point metres.  Wind Elevation values Meters required 10m 300m.  parameter provided, wind-surface parameter required request, see https://power.larc.nasa.gov/docs/methodology/meteorology/wind/. wind_surface user-supplied wind surface corrected wind-speed supplied.  See wind-surface section detail. temporal_average Deprecated. argument superseded temporal_api align new POWER API terminology. time_standard POWER provides two different time standards: Universal Time Coordinated (UTC): standard time measure used world. Local Solar Time (LST): 15 Degrees swath represents solar noon middle longitude swath. Defaults LST.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"data.table::data.table data POWER API.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"argument-details-for-community-","dir":"Reference","previous_headings":"","what":"Argument details for “community”","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"three valid values, one must supplied.  affect units parameter temporal display time series data. ag Provides access Agroclimatology Archive, contains industry-friendly parameters formatted input crop models. sb Provides access Sustainable Buildings Archive, contains industry-friendly parameters buildings community include parameters multi-year monthly averages. re Provides access Renewable Energy Archive, contains parameters specifically tailored assist design solar wind powered renewable energy systems.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"argument-details-for-temporal-api","dir":"Reference","previous_headings":"","what":"Argument details for temporal_api","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"four valid values. hourly hourly average pars hour, day, month year, time zone LST default. daily daily average pars day, month year. monthly monthly average pars month year. climatology Provide parameters 22-year climatologies (solar) 30-year climatologies (meteorology); period climatology monthly average, maximum, /minimum values.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"argument-details-for-x","dir":"Reference","previous_headings":"","what":"Argument details for x","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"single point get specific cell, 1/2 x 1/2 degree, supply length-two numeric vector giving decimal degree longitude latitude order data download,e.g., lonlat = c(-179.5, -89.5). regional coverage get region, supply length-four numeric vector lower left (lon, lat) upper right (lon, lat) coordinates, e.g., lonlat = c(xmin, ymin, xmax, ymax) order given region, e.g., bounding box south western corner Australia: lonlat = c(112.5, -55.5, 115.5, -50.5).  *Maximum area processed 4.5 x 4.5 degrees (100 points).","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"argument-details-for-dates","dir":"Reference","previous_headings":"","what":"Argument details for dates","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"one date provided, treated start date end date single day's values returned, e.g., dates = \"1983-01-01\".  temporal_api set “monthly”, use two year values (YYYY), e.g. dates = c(1983, 2010).  argument used temporal_api set “climatology” ignored set.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"argument-details-for-wind-surface","dir":"Reference","previous_headings":"","what":"Argument details for wind_surface","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"17 surfaces may used corrected wind-speed values using following equation: $$WSC_hgt = WS_10m\\times(\\frac{hgt}{WS_50m})^\\alpha$$ Valid surface types described . vegtype_1 35-m broadleaf-evergreen trees (70% coverage) vegtype_2 20-m broadleaf-deciduous trees (75% coverage) vegtype_3 20-m broadleaf needleleaf trees (75% coverage) vegtype_4 17-m needleleaf-evergreen trees (75% coverage) vegtype_5 14-m needleleaf-deciduous trees (50% coverage) vegtype_6 Savanna:18-m broadleaf trees (30%) & groundcover vegtype_7 0.6-m perennial groundcover (100%) vegtype_8 0.5-m broadleaf shrubs (variable %) & groundcover vegtype_9 0.5-m broadleaf shrubs (10%) bare soil vegtype_10 Tundra: 0.6-m trees/shrubs (variable %) & groundcover vegtype_11 Rough bare soil vegtype_12 Crop: 20-m broadleaf-deciduous trees (10%) & wheat vegtype_20 Rough glacial snow/ice seaice Smooth sea ice openwater Open water airportice Airport: flat ice/snow airportgrass Airport: flat rough grass","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"Adam H. Sparks, adamhsparks@gmail.com","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/extract_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Weather Data From the NASA POWER API Using Australian GPS Coordinates — extract_power","text":"","code":"if (FALSE) { # interactive() locs <- list(   \"Merredin\" = c(x = 118.28, y = -31.48),   \"Corrigin\" = c(x = 117.87, y = -32.33),   \"Tamworth\" = c(x = 150.84, y = -31.07)   )  extract_power(   x = locs,   start_date = \"19850101\",   end_date = \"19850101\",   community = \"ag\",   pars = c(\"RH2M\", \"T2M\", \"PRECTOTCORR\"),   temporal_api = \"daily\" ) }"},{"path":"https://dpird-fsi.github.io/extractOz/reference/remove_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove DAAS Soil Order Cache — remove_cache","title":"Remove DAAS Soil Order Cache — remove_cache","text":"cache located tools::R_user_dir(\"extractOz\", = \"cache\")","code":""},{"path":"https://dpird-fsi.github.io/extractOz/reference/remove_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove DAAS Soil Order Cache — remove_cache","text":"","code":"remove_cache()"},{"path":"https://dpird-fsi.github.io/extractOz/reference/remove_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove DAAS Soil Order Cache — remove_cache","text":"NULL, called side-effects","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"bug-fixes-1-1-18","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"extractOz 1.1.18","text":"Fixes caching DAAS data","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-18","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"extractOz 1.1.18","text":"df_to_list() now supports {data.table} objects. df_to_list() now supports columns named “x” “y” longitude latitude values df transform.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-17","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"extractOz 1.1.17","text":"can now extract soil order information anywhere AU, just within AE Zones.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-16","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"extractOz 1.1.16","text":"Australia lat lon checks now align {weatherOz} checks","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-5","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"extractOz 1.1.5","text":"@bozaah now maintainer.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-4","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"extractOz 1.1.4","text":"Internal changes including swapping paste0() sprintf() redocumenting. Update WORDLIST.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"extractOz 1.1.3","text":"Tidy documentation. Format headings README Vignette.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"extractoz-112","dir":"Changelog","previous_headings":"","what":"extractOz 1.1.2","title":"extractOz 1.1.2","text":"Updates {vcr} cassettes latest {weatherOz}.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"extractOz 1.1.1","text":"Ensure checks passed Updates {vcr} cassette Updates WORDLIST","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"major-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"extractOz 1.1.0","text":"Introduce extract_patched_point() get SILO Patched Point station data nearest station(s) given set geographic coordinates. Introduce extract_data_drill() get SILO Data Drill interpolated data given set geographic coordinates.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"minor-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"extractOz 1.1.0","text":"GRDC Agroecoregions geopackage file reduced size reducing complexity , r     rmapshaper::ms_simplify(aez, keep = 0.1, keep_shapes = FALSE) Internal GRDC Agroecoregions object uses simplified GPKG saved using “xz” compression save file space. Use {roxyglobals} tracking global objects package tidier fashion.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"extractOz 1.0.0","text":"functions related retrieving extracting data now prefixed extract_noun(). Revert using internal data geopackage, use examples use .Rda internally. Add support extracting weather data NASA POWER database, extract_power(). Move {cropgrowdays} {weatherOz}, allows flexibility queries can performed SILO. {cropgrowdays} supports APSIM data returns, {weatherOz} supports full compliment SILO data options. Use named list latitude longitude input values rather data.frame. help users, new function, df_to_list() added workflow disruption can minimised. objects returned data.table, aligning {weatherOz}. Enhanced tests. Add ability manage DAAS soil order cache. Add ability download DAAS soil order data cache locally (default behaviour now).","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"extractOz 1.0.0","text":"Remove several Warning messages performing {sf} operations.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"bug-fixes-0-1-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"extractOz 0.1.3","text":"Fixes bug external data load, tests passing.","code":""},{"path":[]},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"bug-fixes-0-1-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"extractOz 0.1.2","text":"Fixes bug data wasn’t properly loaded documented aez object.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"extractoz-011","dir":"Changelog","previous_headings":"","what":"extractOz 0.1.1","title":"extractOz 0.1.1","text":"Save spatial data geopackage object save issues sf, per https://www.mm218.dev/posts/2022-12-01-sf--packages/.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"extractoz-010","dir":"Changelog","previous_headings":"","what":"extractOz 0.1.0","title":"extractOz 0.1.0","text":"Download locally cache soils data major soil order classifications reduce package size.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"extractoz-002","dir":"Changelog","previous_headings":"","what":"extractOz 0.0.2","title":"extractOz 0.0.2","text":"Add example vignette illustrates import create object pipeline.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"extractoz-001","dir":"Changelog","previous_headings":"","what":"extractOz 0.0.1","title":"extractOz 0.0.1","text":"Initial release.","code":""},{"path":"https://dpird-fsi.github.io/extractOz/news/index.html","id":"extractoz-0009000","dir":"Changelog","previous_headings":"","what":"extractOz 0.0.0.9000","title":"extractOz 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
